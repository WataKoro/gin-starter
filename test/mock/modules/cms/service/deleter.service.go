// Code generated by MockGen. DO NOT EDIT.
// Source: ./modules/cms/service/deleter.service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockCMSDeleterUseCase is a mock of CMSDeleterUseCase interface.
type MockCMSDeleterUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockCMSDeleterUseCaseMockRecorder
}

// MockCMSDeleterUseCaseMockRecorder is the mock recorder for MockCMSDeleterUseCase.
type MockCMSDeleterUseCaseMockRecorder struct {
	mock *MockCMSDeleterUseCase
}

// NewMockCMSDeleterUseCase creates a new mock instance.
func NewMockCMSDeleterUseCase(ctrl *gomock.Controller) *MockCMSDeleterUseCase {
	mock := &MockCMSDeleterUseCase{ctrl: ctrl}
	mock.recorder = &MockCMSDeleterUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCMSDeleterUseCase) EXPECT() *MockCMSDeleterUseCaseMockRecorder {
	return m.recorder
}

// DeleteAdmin mocks base method.
func (m *MockCMSDeleterUseCase) DeleteAdmin(ctx context.Context, id uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAdmin", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAdmin indicates an expected call of DeleteAdmin.
func (mr *MockCMSDeleterUseCaseMockRecorder) DeleteAdmin(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAdmin", reflect.TypeOf((*MockCMSDeleterUseCase)(nil).DeleteAdmin), ctx, id)
}
